!function(t,e,i,n){"use strict";i.module("ngFitText",[]).value("fitTextDefaultConfig",{debounce:!1,delay:250,loadDelay:10,compressor:1,min:0,max:Number.POSITIVE_INFINITY}).directive("fittext",["$timeout","fitTextDefaultConfig","fitTextConfig",function(e,n,o){return{restrict:"A",scope:!0,link:function(f,l,a){function r(){var t=b*d/l[0].offsetWidth/d;return Math.max(Math.min((u[0].offsetWidth-6)*t*h,parseFloat(p)),parseFloat(g))}function s(){l[0].offsetHeight*l[0].offsetWidth!==0&&(l[0].style.fontSize=b+"px",l[0].style.lineHeight="1",l[0].style.display="inline-block",l[0].style.fontSize=r()+"px",l[0].style.lineHeight=y,l[0].style.display=m)}i.extend(n,o.config);var u=l.parent(),c=t.getComputedStyle(l[0],null),d=l.children().length||1,x=a.fittextLoadDelay||n.loadDelay,h=a.fittext||n.compressor,g=("inherit"===a.fittextMin?c["font-size"]:a.fittextMin)||n.min,p=("inherit"===a.fittextMax?c["font-size"]:a.fittextMax)||n.max,y=c["line-height"],m=c.display,b=10;e(function(){s()},x),f.$watch(a.ngBind,function(){s()}),n.debounce?i.element(t).bind("resize",n.debounce(function(){f.$apply(s)},n.delay)):i.element(t).bind("resize",function(){f.$apply(s)})}}}]).provider("fitTextConfig",function(){var t=this;return this.config={},this.$get=function(){var e={};return e.config=t.config,e},this})}(window,document,angular);